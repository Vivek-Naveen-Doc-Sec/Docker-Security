# CONTAINER SECURITY BEST PRACTICES

# USING AN UNPRIVILEGED USER
  RUN groupadd -r <USER> && useradd -r -g <GROUP> <USER>
          # ADD THE ABOVE COMMAND TO THE DOCKER FILE THAT IS USED TO CREATE THE DOCKER IMAGE.
  ~$ sudo docker run -u <USER> -it --rm <DOCKER-IMAGE-ID> /bin/bash

# DISABLING THE ROOT USER
  RUN chsh -s /usr/sbin/nologin root
          # ADD THE ABOVE COMMAND TO THE DOCKER FILE THAT IS USED TO CREATE THE DOCKER IMAGE.
          
# PREVENTING PRIVILEGE ESCALATION ATTACKS
  ~$ sudo docker run -u <USER> --security-opt=no-new-privileges -it <DOCKER-IMAGE-ID>
  
# LIMITING CONTAINER CAPABILITIES
  ~$ sudo docker run --cap-drop all -it --rm <DOCKER-IMAGE-ID>
  ~$ sudo docker run --cap-drop all --cap-add <CAPABILITY> -it --rm <DOCKER-IMAGE-ID>
  
# FILESYSTEM PERMISSIONS AND ACCESS
  ~$ sudo docker run --read-only <DOCKER-IMAGE-ID>
  ~$ sudo docker run --read-only --tmpfs /tmp <DOCKER-IMAGE-ID>
# DISABLING INTER-CONTAINER COMMUNICATION
  ~$ sudo docker network create --driver bridge -o "com.docker.network.bridge.enable_icc"="false" <NETWORK-NAME>
  ~$ sudo docker run -it --rm --network <NETWORK-NAME> <DOCKER-IMAGE-ID>
